# Include-Guard
snippet once
abbr header for upper::class
options head
    #ifndef `toupper(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`_`toupper(substitute(expand("%:t"),"\\.","_","g"))`_
    #define `toupper(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`_`toupper(substitute(expand("%:t"),"\\.","_","g"))`_

    namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    {

	/**
	 * @brief ${1}
	 */
    class `substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`
    {
    public:
        ${0}
    };

    }

    #endif /* end of include guard */

# Include-Guard，以上层目录名为名字空间，前面再加上一层sscc::名字空间
snippet h1
abbr header for sscc::upper::class
options head
	/**
	 * @file
	 * @brief  ${1:`substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`类的声明}
	 * @author `$USER`
	 */
    #ifndef SSCC_`toupper(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g")."_")``toupper(substitute(expand("%:t"),"\\.","_","g"))`_
    #define SSCC_`toupper(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g")."_")``toupper(substitute(expand("%:t"),"\\.","_","g"))`_

    namespace sscc
    {
    namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    {

	/**
	 * @brief ${2}
	 */
    class `substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`
    {
    public:
        ${0}
    };

    }   // namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    }   // namespace sscc

    #endif /* end of include guard */

# Include-Guard，以上上层目录名为名字空间，前面再加上一层sscc::名字空间
snippet h2
abbr header for sscc::upper upper::class
options head
	/**
	 * @file
	 * @brief  ${1:`substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`类的声明}
	 * @author `$USER`
	 */
    #ifndef SSCC_`toupper(substitute(fnamemodify(substitute(expand("%:p:h:h:h:t")."/".expand("%:p:h:h:t"),"/include","",""),":t"),"\\.","_","g")."_")``toupper(substitute(expand("%:t"),"\\.","_","g"))`_
    #define SSCC_`toupper(substitute(fnamemodify(substitute(expand("%:p:h:h:h:t")."/".expand("%:p:h:h:t"),"/include","",""),":t"),"\\.","_","g")."_")``toupper(substitute(expand("%:t"),"\\.","_","g"))`_

    namespace sscc
    {
    namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:h:t")."/".expand("%:p:h:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    {

	/**
	 * @brief ${2}
	 */
    class `substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`
    {
    public:
        ${0}
    };

    }   // namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:h:t")."/".expand("%:p:h:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    }   // namespace sscc

    #endif /* end of include guard */

snippet c1
abbr cpp for sscc::upper::class
options head
	/**
	 * @file
	 * @brief  ${1:`substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`类的定义}
	 * @author `$USER`
	 */
    #include "`expand("%:t:r")`.h"

    namespace sscc
    {
    namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    {

    ${0}

    }   // namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:t")."/".expand("%:p:h:t"),"/include","",""),":t"),"\\.","_","g"))`
    }   // namespace sscc


snippet c2
abbr cpp for sscc::upper upper::class
options head
	/**
	 * @file
	 * @brief  ${1:`substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`类的定义}
	 * @author `$USER`
	 */
    #include "`expand("%:t:r")`.h"

    namespace sscc
    {
    namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:h:t")."/".expand("%:p:h:h:t"),"/src","",""),":t"),"\\.","_","g"))`
    {

    ${0}

    }   // namespace `tolower(substitute(fnamemodify(substitute(expand("%:p:h:h:h:t")."/".expand("%:p:h:h:t"),"/src","",""),":t"),"\\.","_","g"))`
    }   // namespace sscc


# File declaration
snippet fc
abbr /** @file
options head
	/**
	 * @file
	 * @brief  ${1}
	 * @author `$USER`
	 */
	${0}

