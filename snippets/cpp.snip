include c.snip
include cpp_guard.snip

snippet     class
abbr        class {}
    class ${1:#:name}
    {
        ${2}
    };

snippet     try
abbr        try catch
    try
    {
        ${1:TARGET}
    }
    catch (${2:exception})
    {
        ${3}
    }

snippet     fori
abbr        for (T i::) {}
    for (${1:size_t} ${2:i}=${3:0}; $2 < ${4}; ++$2)
    {
        ${0}
    }

# range based for ( C++11 feature )
snippet     for_CPP11
abbr        for (:) {}
    for (${1:#:var} : ${2:#:container})
    {
        ${0:TARGET}
    }

delete      namespace
snippet     namespace
abbr        namespace {}
options     head
    namespace ${1:#:name}
    {

    ${0:TARGET}

    } // namespace $1

snippet mfun
    
    ${4:void} ${1:`substitute(substitute(expand("%:t:r"), "^\\(.\\)", "\\u\\1", ""),"_\\(.\\)","\\u\\1","g")`}::${2:MemberFunction}(${3})
    {
        ${0}
    }

snippet     helloworld
abbr        #include<iostream> int main...
    #include <iostream>
    using namespace std;

    int main(int argc, char const* argv[])
    {
        ${0:cout << "hello, world!" << endl;}

        return 0;
    }

snippet log
    LOG_${1:INFO}(
        ${2:kInfo},
        format(translate(${3}))
        % ${4},
        ${5:""});

    ${0}

