= dotvim

个人使用的vim配置文件。

== 安装

. 从++github.com++上clone到本地

** Linux下
+
[source,sh]
----
git clone --recursive https://github.com/thawk/dotvim.git ~/.vim
----

** Windows下使用++TortoiseGit++工具
+
在资源管理器上，右键菜单中，选择++Git clone...++，记得选中++Recursive++选项，这样就可以把++NeoBundle.vim++也一并安装好。
+
NOTE: 在Windows下，clone到++\~/vimfiles++会比clone到++~/.vim++更加方便。

. 让vim使用我们的配置文件
+
vim缺省会使用++\~/.vimrc++（Windows下使用++~/_vimrc++）配置文件。由于该文件在git管理的范围外，不方便管理，因此可以将通过该文件来调用真正的配置文件（++\~/.vim/vimrc++或++~/vimfiles/vimrc++）：

** Linux下
+
[source,sh]
----
echo 'runtime vimrc' > ~/.vimrc
----

** Windows下
+
建立++~/_vimrc++，内容如下：
+
----
runtime vimrc
----

. 运行vim程序，在vim中运行下面的命令以安装其余插件：
+
----
:NeoBundleInstall
----
+
由于插件数量比较多，因此可能需要较长的时间。

. 拷贝++vimproc++的动态库
+
本配置使用了++vimproc++插件，该插件需要安装相应的动态库才能正常使用。在Linux下，vim会自动执行编译步骤，而在Windows下则需要手工安装预先了的库文件到++~/vimfiles/bundle/vimproc/autoload/++下。
+
对于32位Windows系统，++\~/vimfiles/win32/vimproc_win32.dll++下已经有一份可用动态库，也可以到 https://github.com/Shougo/vimproc/downloads 下载更新的版本，并拷贝到++~/vimfiles/bundle/vimproc/autoload/++。

. 至此，所有配置均已完成，可以开始体验vim了。

== 配置升级

本配置会不定期进行维护、改进，需要的话可以通过下面的步骤更新vim配置文件：

. 更新基本vim配置
+
vim的基本配置和所要安装的插件信息都存放在++vimrc++文件中，因此需要先进行更新，再更新其余的插件。
+
** Linux下在++~/.vim++下运行++git pull++即可。
** Windows下可以在++~/vimfiles++目录上右键，选择++Git Pull...++进行更新。

. 清理不再使用的插件
+
可以通过注释++vimrc++中以++NeoBundle++开头的行来达到禁用插件的目的。被禁用的插件不会被vim载入，但还会保留在硬盘上。如果需要的话，可以在vim中运行下面的命令以从硬盘中删除被禁用的插件：
+
----
:NeoBundleClean
----

. 安装新插件，升级已有插件
+
在运行vim时，如果有新的、未安装的插件，vim会有相应的提示信息，可以执行下面的命令安装缺失的插件：
+
----
:NeoBundleInstall
----
+
如果没有新插件，或者除了安装新插件外，也希望把已有插件更新到最新版本，可以在vim中直接运行下面的命令（会同时安装缺失的插件）：
+
----
:NeoBundleUpdate
----

== 小技巧：使用端口443代替22来通过SSH协议访问github

If you can't access github via standard port 22, you can add these
lines to ++~/.ssh/config++ to access github through https port:

--------------------
Host github.com
  Hostname ssh.github.com
  User git
  Port 443
--------------------

