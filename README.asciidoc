= dotvim

个人使用的vim配置文件。本文档主要描述配置文件的安装和更新方法。

关于本配置文件的更多使用技巧可参见： https://github.com/thawk/wiki/wiki/vim

== 安装

. 从++github.com++上clone到本地

** Linux下
+
[source,sh]
----
git clone --recursive https://github.com/thawk/dotvim.git ~/.vim
----

** Windows下使用++TortoiseGit++工具
+
在资源管理器上，右键菜单中，选择++Git clone...++，记得选中++Recursive++选项，这样就可以把++NeoBundle.vim++也一并安装好。
+
NOTE: 在Windows下，clone到++\~/vimfiles++会比clone到++~/.vim++更加方便。

. 让vim使用我们的配置文件
+
vim缺省会使用++\~/.vimrc++（Windows下使用++~/_vimrc++）配置文件。由于该文件在git管理的范围外，不方便管理，因此可以将通过该文件来调用真正的配置文件（++\~/.vim/vimrc++或++~/vimfiles/vimrc++）：

** Linux下
+
运行++bootstrap.sh++，将会建立++~/.vimrc++，并且会建立++vimrc.local++文件

** Windows下
+
建立++~/_vimrc++，内容如下：
+
----
runtime vimrc
----
+
把++vimrc.local.sample++拷贝一份，改名为++vimrc.local++

** 如果vim目录不放在++\~/.vimrc++或++\~/vimfiles++，需要设置++runtimepath++路径，如
+
----
set runtimepath^=d:/vimconfig
set runtimepath+=d:/vimconfig/after
source d:/vimconfig/vimrc
----

. 运行vim程序，在vim中运行下面的命令以安装其余插件：
+
----
:NeoBundleInstall
----
+
由于插件数量比较多，因此可能需要较长的时间。

. 至此，所有配置均已完成，可以开始体验vim了。

== 插件选择

本配置中的插件按用途进行了分组，并可以通过++vimrc.local++文件进行启用及禁用。

缺省禁用了与开发相关的一些插件，可以按需要选择性启用。

== 配置升级

本配置会不定期进行维护、改进，需要的话可以通过下面的步骤更新vim配置文件：

. 更新基本vim配置
+
vim的基本配置和所要安装的插件信息都存放在++vimrc++文件中，因此需要先进行更新，再更新其余的插件。
+
** Linux下在++~/.vim++下运行++git pull++即可。
** Windows下可以在++~/vimfiles++目录上右键，选择++Git Pull...++进行更新。

. 清理不再使用的插件
+
可以通过注释++vimrc++中以++NeoBundle++开头的行来达到禁用插件的目的。被禁用的插件不会被vim载入，但还会保留在硬盘上。如果需要的话，可以在vim中运行下面的命令以从硬盘中删除被禁用的插件：
+
----
:NeoBundleClean
----

. 升级已有插件，安装新插件
+
可以在vim中运行下面的命令，升级已有插件（会同时安装缺失的插件）：
+
----
:NeoBundleUpdate
----
+
由于上面的命令会检查所有已安装插件的更新情况，可能需要比较长的时间。如果只想安装缺失的插件，不想更新已有插件，可以运行下面的命令：
+
----
:NeoBundleInstall
----

== 小技巧：使用端口443代替22来通过SSH协议访问github

If you can't access github via standard port 22, you can add these
lines to ++~/.ssh/config++ to access github through https port:

--------------------
Host github.com
  Hostname ssh.github.com
  User git
  Port 443
--------------------

